plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.dynapi'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

springBoot {
    buildInfo()
}

repositories {
    mavenCentral()
    maven {
        url = "https://maven.pkg.github.com/DynAPI/org.dynapi.dynapi"
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    // dynapi
    implementation 'org.dynapi:squirtle:0.2.0'
    implementation 'org.dynapi:openapispec:0.3.4'
    implementation 'org.dynapi:json-schema-gen:0.7.0'
    implementation 'org.dynapi:common:0.2.1'
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // lambok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // json/yaml
    implementation 'org.json:json:20240303'
    implementation 'org.yaml:snakeyaml'
    // databases
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'org.xerial:sqlite-jdbc'
    // testing
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
